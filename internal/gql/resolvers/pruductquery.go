package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"fmt"

	runtime "github.com/Sanchir01/sandjma_graphql/internal/gql/generated"
	"github.com/Sanchir01/sandjma_graphql/internal/gql/model"
)

// TotalCount is the resolver for the totalCount field.
func (r *productBlockListResolver) TotalCount(ctx context.Context, obj *model.ProductBlockList, estimate string) (model.TotalCountResolvingResult, error) {
	panic(fmt.Errorf("not implemented: TotalCount - totalCount"))
}

// GetAllProducts is the resolver for the getAllProducts field.
func (r *productsQueryResolver) GetAllProducts(ctx context.Context, obj *model.ProductsQuery) ([]model.ProductFindResult, error) {
	panic(fmt.Errorf("not implemented: GetAllProducts - getAllProducts"))
}

// ProductBlockList returns runtime.ProductBlockListResolver implementation.
func (r *Resolver) ProductBlockList() runtime.ProductBlockListResolver {
	return &productBlockListResolver{r}
}

type productBlockListResolver struct{ *Resolver }
