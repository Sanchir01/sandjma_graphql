package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.48

import (
	"context"
	userFeature "github.com/Sanchir01/sandjma_graphql/internal/feature/user"
	"github.com/Sanchir01/sandjma_graphql/internal/gql/model"
	customMiddleware "github.com/Sanchir01/sandjma_graphql/internal/handlers/middleware"
	"github.com/Sanchir01/sandjma_graphql/pkg/lib/api/response"
)

// Login is the resolver for the login field.
func (r *authMutationResolver) Login(ctx context.Context, obj *model.AuthMutation, input *model.LoginInput) (model.LoginResult, error) {
	user, err := r.UserStr.GetUserByPhone(ctx, input.Phone)
	if err != nil {
		return response.NewInternalErrorProblem("неправильный телефон или пароль"), nil
	}
	r.Logger.Info("user", user)
	w := customMiddleware.GetResponseWriter(ctx)
	if err = userFeature.AddCookieTokens(user.ID, user.Role, w); err != nil {
		r.Logger.Warn("errors generating jwt", err)
		return response.NewInternalErrorProblem("Error for generating jwt"), nil
	}
	return model.LoginResultOk{User: user}, nil
}
